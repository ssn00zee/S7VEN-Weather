import Head from 'next/head'
import { useState, useEffect, useRef } from 'react'
import axios from 'axios'
import Image from 'next/image'


export default function Home() {

  const apiKey = process.env.NEXT_PUBLIC_API_KEY
  const location = 'vancouver'
  const units = 'metric'
  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${location}&units=${units}&appid=${apiKey}`

  const [data, setData] = useState()
  const grabWeather = useRef(false)

  const fetchWeather = async () => {

    try {
      const res = await axios.get(url)
      // setData(res)
      console.log(res.data)

      const dataArr = []

      let weatherData = res.data.list.map((weather, i) => {
        console.log(parseInt(weather.dt_txt.substr(8,2), 10))
        let num = parseInt(weather.dt_txt.substr(8, 2), 10)

        if (num !== dataArr.find(element => element === num)){
          dataArr.push(num)
          console.log('here')
          console.log(res.data.list[i])

          var month = ''
          var icon = ''
  
          if(weather.dt_txt.substr(5,2) == 1) {
            month = 'January'
          } else if (weather.dt_txt.substr(5,2) == 2) {
            month = 'February'
          } else if (weather.dt_txt.substr(5,2) == 3) {
            month = 'March'
          } else if (weather.dt_txt.substr(5,2) == 4) {
            month = 'April'
          } else if (weather.dt_txt.substr(5,2) == 5) {
            month = 'May'
          } else if (weather.dt_txt.substr(5,2) == 6) {
            month = 'June'
          } else if (weather.dt_txt.substr(5,2) == 7) {
            month = 'July'
          } else if (weather.dt_txt.substr(5,2) == 8) {
            month = 'August'
          } else if (weather.dt_txt.substr(5,2) == 9) {
            month = 'September'
          } else if (weather.dt_txt.substr(5,2) == 10) {
            month = 'October'
          } else if (weather.dt_txt.substr(5,2) == 11) {
            month = 'November'
          } else if (weather.dt_txt.substr(5,2) == 12) {
            month = 'December'
          }
  
          if (weather.weather[0].main == 'Clouds'){
            icon = '/default/icons/broken-clouds.png'
          } else if (weather.weather[0].main == 'Clear'){
            icon = '/default/icons/clear-sky.png'
          } else if (weather.weather[0].main == 'Atmosphere'){
            icon = '/default/icons/mist.png'
          } else if (weather.weather[0].main == 'Rain'){
            icon = '/default/icons/rain.png'
          } else if (weather.weather[0].main == 'Drizzle'){
            icon = '/default/icons/shower-rain.png'
          } else if (weather.weather[0].main == 'Snow'){
            icon = '/default/icons/snow.png'
          } else if (weather.weather[0].main == 'Thunderstorm'){
            icon = '/default/icons/thunderstorm.png'
          }
  
          var now = new Date(weather.dt_txt)
          var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
          var day = days[now.getDay()]
          
          return (
            <div
              key={i}
            >
              <Image
                src={icon}
                alt={icon}
                width={180}
                height={180}
                priority
              />
              <p>
                {day} <br/> {month} {weather.dt_txt.substr(8,2)}, {weather.dt_txt.substr(0,4)}
              </p>
              <div>{weather.main.temp.toFixed(1)} </div>
              <div>{weather.weather[0].main} </div>
            </div>
          )
        }

      })

      console.log(weatherData)
      setData(weatherData)
    } catch (e) {
      console.log(e)
    }
  }

  useEffect(() => {

    if (grabWeather.current === true){
      fetchWeather()
    }
    return () => {
      grabWeather.current = true
    }

  }, [])

  const current = new Date()
  const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <h1>Vancouver, BC Weather</h1>
          <h3>Last Updated: {date}</h3>
          {data}
        </div>
      </main>

    </>
  )
}
